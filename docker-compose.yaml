services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: vispyr
      POSTGRES_DB: vispyr_demo
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - demo
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U user -d vispyr_demo']
      interval: 10s
      timeout: 5s
      retries: 5

  server-main:
    build:
      context: ./server_main
      dockerfile: ../Dockerfile
    container_name: server-main
    ports:
      - '3001:3001'
    environment:
      - DB_USER=user
      - DB_HOST=postgres
      - DB_NAME=vispyr_demo
      - DB_PASSWORD=vispyr
      - DB_PORT=5432
      - SERVER_EXTERNAL_URL=http://server-external:3002
      - SERVER_INTERNAL_URL=http://server-internal:3003
      - OTEL_SERVICE_NAME=main_server
      - OTEL_RESOURCE_ATTRIBUTES=service.namespace=main_server
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - demo
    restart: unless-stopped

  server-external:
    build:
      context: ./server_external
      dockerfile: ../Dockerfile
    container_name: server-external
    ports:
      - '3002:3002'
    networks:
      - demo
    restart: unless-stopped

  server-internal:
    build:
      context: ./server_internal
      dockerfile: ../Dockerfile
    container_name: server-internal
    ports:
      - '3003:3003'
    environment:
      - OTEL_SERVICE_NAME=internal_server
      - OTEL_RESOURCE_ATTRIBUTES=service.namespace=internal_server
    networks:
      - demo
    restart: unless-stopped

  client:
    build:
      context: ./client
      dockerfile: ../Dockerfile
    container_name: client
    ports:
      - '5173:5173'
    depends_on:
      - server-main
    networks:
      - demo
    restart: unless-stopped

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - '9100:9100'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - demo
    restart: unless-stopped

  alloy:
    image: grafana/alloy:latest
    container_name: alloy
    ports:
      - '12345:12345'
      - '4317:4317'
      - '4318:4318'
      - '9999:9999'
    volumes:
      - ./vispyr_agent/config.alloy:/etc/alloy/config.alloy
    command:
      - run
      - /etc/alloy/config.alloy
      - --server.http.listen-addr=0.0.0.0:12345
    depends_on:
      - node-exporter
    networks:
      - demo
    restart: unless-stopped

networks:
  demo:
    driver: bridge

volumes:
  postgres_data:
