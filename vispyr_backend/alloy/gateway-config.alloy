// Receivers
otelcol.receiver.otlp "agent_sdk_telemetry" {
  grpc {
    endpoint = "0.0.0.0:4317"
  }

  http {
    endpoint = "0.0.0.0:4318"
  }

  output {
    metrics = [otelcol.processor.batch.sdk_telemetry.input]
    traces = [otelcol.processor.batch.sdk_telemetry.input]
  }
}

prometheus.receive_http "agent_node_metrics" {
  http {
    listen_address = "0.0.0.0"
    listen_port = 9090
  }

  forward_to = [prometheus.remote_write.default.receiver]
}

pyroscope.receive_http "default" {
  http {
    listen_address = "0.0.0.0"
    listen_port = 9999
  }

  forward_to = [pyroscope.write.default.receiver]
}

// OTel Processor
otelcol.processor.batch "sdk_telemetry" {
  output {
    metrics = [otelcol.exporter.prometheus.default.input]
    traces = [otelcol.exporter.otlp.tempo.input]
  }
}

// Alloy otel to prometheus converter
// This component is not the OTel exporter, but instead converts data to prom format
otelcol.exporter.prometheus "default" {
  forward_to = [prometheus.remote_write.default.receiver]
}

// Promtheus exporter / writer
prometheus.remote_write "default" {
  endpoint {
    url = "http://prometheus:9090/api/v1/write"
  }
}

// Tempo exporter
otelcol.exporter.otlp "tempo" {
  client {
    endpoint = "http://tempo:4317"
    tls {
      insecure = true
      insecure_skip_verify = true
    }
  }
}

// Pyroscope writer
pyroscope.write "default" {
  endpoint {
    url = "http://pyroscope:4040"
  }
}

livedebugging {
  enabled = true
}
